<?php

namespace App\Filters;

use CodeIgniter\Filters\FilterInterface;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;
use Firebase\JWT\JWT;
use Firebase\JWT\Key;
use Exception;

class JWTFilter implements FilterInterface
{
    public function before(RequestInterface $request, $arguments = null)
    {
        $key = getenv('JWT_SECRET');
        $header = $request->getHeader("Authorization");
        if (!$header) {
            return service('response')->setStatusCode(401)->setJSON(['msg' => 'Token required']);
        }
        $token = explode(' ', $header->getValue())[1] ?? null;
        if (!$token) {
            return service('response')->setStatusCode(401)->setJSON(['msg' => 'Invalid token']);
        }
        try {
            $decoded = JWT::decode($token, new Key($key, 'HS256'));
            $request->user = $decoded;
        } catch (Exception $e) {
            return service('response')->setStatusCode(401)->setJSON(['msg' => 'Invalid token']);
        }
    }

    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)
    {
        // No action needed
    }
}
